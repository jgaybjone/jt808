plugins {
    id 'org.springframework.boot' version '2.2.6.RELEASE'
    id 'io.spring.dependency-management' version '1.0.9.RELEASE'
    id 'org.jetbrains.kotlin.plugin.spring' version '1.3.71'
    id "org.jetbrains.kotlin.plugin.allopen" version "1.3.71"
    id "org.jetbrains.kotlin.plugin.noarg" version "1.3.71"
}

configurations {
    all*.exclude group: "commons-logging", module: "commons-logging"
    all*.exclude group: "org.springframework.boot", module: "spring-boot-starter-logging"
    all*.exclude group: "org.antlr", module: "antlr4-annotations"
    compileOnly {
        extendsFrom annotationProcessor
    }
}

dependencies {
    implementation project(':core-domain')
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-amqp'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-data-redis-reactive'
    implementation 'org.springframework.boot:spring-boot-starter-log4j2'
    implementation group: 'org.apache.commons', name: 'commons-lang3', version: '3.10'
    //异步日志
    implementation 'com.lmax:disruptor:3.4.2'
    implementation 'org.springframework.boot:spring-boot-starter-rsocket'
    implementation 'org.hibernate.validator:hibernate-validator:6.1.2.Final'
    implementation group: 'org.apache.commons', name: 'commons-pool2', version: '2.6.0'
    implementation group: 'commons-io', name: 'commons-io', version: '2.6'
    compileOnly 'org.projectlombok:lombok'
    runtimeOnly 'org.postgresql:postgresql'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }
    testImplementation 'io.projectreactor:reactor-test'
    testImplementation 'org.springframework.amqp:spring-rabbit-test'
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
}

compileKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}
compileTestKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}

//这里进行noArg的配置
noArg {
    //配置路径就是咱们先开始定义的那个注解类
    annotation("com.avenger.jt808.domain.NoArg")
}
//这里进行allOpen的配置
allOpen {
    //配置路径就是咱们先开始定义的那个注解类
    annotation("com.avenger.jt808.domain.AllOpen")
}

test {
    useJUnitPlatform()
}
